generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cashier {
  id String @id @default(cuid())

  legacyId             Int
  legacyOperatorId     Int
  legacyOriginDatabase String
  legacySalePlaceId    Int

  operator    CashierOperator @relation(fields: [operatorId], references: [id])
  operatorId  String
  salePlace   SalePlace       @relation(fields: [salePlaceId], references: [id])
  salePlaceId String
  sales       Sale[]

  closeTime String?
  openDate  DateTime
  openTime  String

  @@unique([legacyId, legacyOperatorId], name: "unique_legacy_constraint")
}

model CashierOperator {
  id String @id @default(cuid())

  legacyId             Int
  legacyOriginDatabase String

  cashiers Cashier[]

  name String
}

model Customer {
  id String @id @default(cuid())

  legacyId             Int
  legacyOriginDatabase String
  legacyUnitId         Int

  category   CustomerCategory @relation(fields: [categoryId], references: [id])
  categoryId String
  sales      Sale[]

  name String

  @@unique([legacyId, legacyUnitId], name: "unique_legacy_constraint")
}

model CustomerCategory {
  id String @id @default(cuid())

  legacyId             Int
  legacyOriginDatabase String

  customers Customer[]

  name String

  @@unique([legacyId, legacyOriginDatabase], name: "unique_legacy_constraint")
}

model PaymentMethod {
  id String @id @default(cuid())

  legacyId             Int
  legacyOriginDatabase String

  sales Sale[]

  name String

  @@unique([legacyId, legacyOriginDatabase], name: "unique_legacy_constraint")
}

model Product {
  id String @id @default(cuid())

  legacyId             Int
  legacyOriginDatabase String

  SaleItem SaleItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cfop        String?
  cofinsCST   String?
  description String
  icmsCSOSN   String?
  icmsCST     String?
  ncm         String?
  pisCST      String?
  unit        String

  @@unique([legacyId, legacyOriginDatabase], name: "unique_legacy_constraint")
}

model Sale {
  id String @id @default(cuid())

  legacyId             Int
  legacyCashierId      Int
  legacyOperatorId     Int
  legacyOriginDatabase String

  cashier         Cashier        @relation(fields: [cashierId], references: [id])
  cashierId       String
  customer        Customer?      @relation(fields: [customerId], references: [id])
  customerId      String?
  items           SaleItem[]
  paymentMethod   PaymentMethod? @relation(fields: [paymentMethodId], references: [id])
  paymentMethodId String?

  date       DateTime
  NFCEStatus String   @default("Pendente")
  time       String
  value      Decimal  @db.Decimal(12, 2)

  @@unique([legacyId, legacyCashierId, legacyOperatorId, legacyOriginDatabase], name: "unique_legacy_constraint")
}

model SaleItem {
  id String @id @default(cuid())

  product   Product @relation(fields: [productId], references: [id])
  productId String

  sale   Sale   @relation(fields: [saleId], references: [id])
  saleId String

  itemValue     Decimal @db.Decimal(12, 2)
  itemUnitValue Decimal @db.Decimal(12, 2)
  quantity      Int
}

model SalePlace {
  id String @id @default(cuid())

  legacyId             Int
  legacyOriginDatabase String

  cashiers Cashier[]
  unit     Unit      @relation(fields: [unitId], references: [id])
  unitId   String

  name String

  @@unique([legacyId, legacyOriginDatabase], name: "unique_legacy_constraint")
}

model Synchronization {
  id String @id @default(cuid())

  createdAt DateTime @default(now())

  createdData Int
  status      String @default("Sucesso")
  user        String @default("Admin")
  updatedData Int
}

model Unit {
  id String @id @default(cuid())

  legacyId             Int
  legacyOriginDatabase String

  salePlaces SalePlace[]

  name String

  @@unique([legacyId, legacyOriginDatabase], name: "unique_legacy_constraint")
}
